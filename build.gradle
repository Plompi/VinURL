plugins {
	id "fabric-loom" version "1.11-SNAPSHOT"
	id "org.moddedmc.wiki.toolkit" version "0.2.8"
}

var mod_version = file('CHANGELOG.md').text.find(/Version: (.+)/) { _, version -> version }
version = "${mod_version}+mc${mod_minecraft_version_end}"

base {
	archivesName = mod_id
}

repositories {
	maven { url = "https://maven.wispforest.io" }
}

dependencies {
	annotationProcessor modImplementation("io.wispforest:owo-lib:${run_owo_version}")
	minecraft "com.mojang:minecraft:${run_minecraft_version}"
	mappings "net.fabricmc:yarn:${run_yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${run_fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${run_fabric_version}"
}

processResources {
	var replaceProperties = [
			mod_version               		: mod_version,
			mod_id							: mod_id,
			mod_name						: mod_name,
			mod_license                     : mod_license,
			mod_author                      : mod_author,
			mod_credits                     : mod_credits,
			mod_description                 : mod_description,
			mod_url                         : mod_url,

			mod_minecraft_version_start		: mod_minecraft_version_start,
			mod_minecraft_version_end		: mod_minecraft_version_end,

			mod_loader_fabric_version		: mod_loader_fabric_version,
			mod_loader_neoforge_version		: mod_loader_neoforge_version
	]
	inputs.properties replaceProperties
	filesMatching(['fabric.mod.json', 'META-INF/neoforge.mods.toml']) {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	if (!project.hasProperty('neoforge')) {
		exclude('META-INF/**')
	}
	from("LICENSE") {
		rename { "${it}_${mod_id}" }
	}
}

wiki {
	docs {
		vinurl {
			root = file("docs")
			wikiAccessToken = System.getenv('WIKI_TOKEN')
		}
	}
}